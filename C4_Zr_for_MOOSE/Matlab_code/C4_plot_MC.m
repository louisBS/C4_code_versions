%% C4_plot_MC
%%Generate the plots of the data from the Monte Carlo transitions code

%%Author : Ryan Schulte, Leo Borrel
%%Email : borrel@wisc.edu

%%Last updated: 09/03/2018

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% Set default graphic properties

set(0, 'DefaultFigureColor', 'White');
set(0, 'DefaultAxesFontSize', 50);      % 50 for presentation ; 30 else
set(0, 'DefaultAxesGridLineStyle', '-');
set(0, 'DefaultAxesXGrid', 'on');
set(0, 'DefaultAxesYGrid', 'on');
set(0, 'DefaultAxesBox', 'on');
set(0, 'DefaultAxesXColor', 'Black');
set(0, 'DefaultAxesYColor', 'Black');
set(0, 'DefaultAxesZColor', 'Black');
set(0, 'DefaultAxesGridColor', 'Black');
set(0, 'DefaultAxeslineWidth', 1);
set(0, 'DefaultLineLineWidth', 4);      % 4 for presentation ; 3 else
set(0, 'DefaultLineMarkerSize', 15);    % 15 for presentation ; 10 else
set(0, 'DefaultFigureUnits', 'normalized');
set(0, 'DefaultFigurePosition', [0 0.035 1 0.885]);
set(0, 'DefaultFigurePaperType', 'usletter');
set(0, 'DefaultFigurePaperOrientation', 'landscape');


%%
% load(strcat('MC_output_file/',file_name)); % Generated by C4_MC_stats
% load(strcat(file_name, '_Gaussian'),'MC_mean','std_dev'); 
% load(strcat('mean_case_', file_name), 'd_total'); %This file is saved when the normal C4 model is run with a 
%transition thickness of 3.1 microns. d_total is used as the mean in the confidence interval
% d_total = d_total*1e4;
% C4_exp_data;

if exposure_time(end) == 'd'
    time_plot = days;
    time_unit = 'days';
elseif exposure_time(end) == 's'
    time_plot = time;
    time_unit = 's';
end

%% All oxide thickness curves generated by Monte Carlo with confidence interval

fig_d_MC = figure('Name', 'Monte Carlo oxide thickness');

% Load the mean case
load(strcat('output_file/', file_name, '_mean'), 'd_total');

hold on;
% for c = 1:n_MC_trans
%     plot(time_plot, d_total_MC(c, :) * 1e4, 'Linewidth', 0.5);
% end

lower = plot(time_plot,confidence_bounds(1,:) * 1e4, '-b', 'Linewidth', 4);
upper = plot(time_plot,confidence_bounds(2,:) * 1e4, '-b', 'Linewidth', 4);
mean = plot(time_plot,d_total * 1e4, '-r', 'Linewidth', 4);

exp = plot(day_wg_exp, d_exp, '^k', 'MarkerFaceColor', 'k');

% title('Oxide thickness evolution with exposure time');
xlim([0 time_plot(end)]);
xlabel(strcat('Exposure time [', time_unit, ']'));
ylim([0 max_d_bins * 1e4]);
ylabel('Oxide thickness [\mum]');
legend([exp, mean, lower], 'Experiment', 'C4 model', '90 % confidence interval limits', 'Location', 'NorthWest');


%% Comparison between bin sampling and PDf at a chosen time

fig_bin_PDF = figure('Name', 'Comparison bin sampling - PDF');

% t_plot = [942 943 944 945];
% list_colors = {'r', 'b', '0 0.6 0', [0.5 0.5 0.5], [1 0.5 0]};
% 
% hold on;
% for k = 1:length(t_plot)
%     plot(d_bins * 1e4, n_curve_per_bin(:, t_plot(k)), 'Color', list_colors{k});
%     for c = 1:n_MC_trans
%         plot(d_total_MC(c, t_plot(k)) * 1e4, 1, 'x', 'Color', list_colors{k});
%     end
%     plot(d_pdf * 1e4, d_pdf_MC(:, t_plot(k)), ':', 'Color', list_colors{k});
% end

t_plot = 800;

hold on;
plot(d_bins * 1e4, n_curve_per_bin(:, t_plot)/10, ':k');
plot(d_pdf * 1e4, d_pdf_MC_non_transitioned(:, t_plot), '-b');
plot(d_pdf * 1e4, d_pdf_MC_transitioned(:, t_plot), '-g');
plot(d_pdf * 1e4, d_pdf_MC(:, t_plot), '-r');

% title('Comparison between bin sampling and PDF');
xlabel('Oxide thickness [\mum]');
ylabel('Normalized Probability Density');
legend('Bin Sampling', 'Non-transitioned PDF', 'Transitioned PDF', 'Total PDF');


%% Bin-Sampling Heat Map

fig_heat_map_bin = figure('Name', 'Heat map bin sampling');

hold on;
heat_map = pcolor(time_plot, d_bins * 1e4, n_curve_per_bin);
exp = plot(day_wg_exp, d_exp, '^r', 'MarkerFaceColor', 'r');

set(heat_map, 'EdgeColor', 'none');
% title('Normalized Probability Density of Oxide Thickness with Exposure Time');
xlim([0 time_plot(end)]);
xlabel(strcat('Exposure time [', time_unit, ']'));
ylim([0 max_d_bins * 1e4]);
ylabel('Oxide thickness [\mum]');
bar = colorbar;
colormap(flipud(gray));
ylabel(bar, 'Normalized Probability Density');
legend(exp, 'Experimental Data', 'Location', 'NorthWest');


%% PDF Heat Map

fig_heat_map_pdf = figure('Name', 'Heat map PDF');

heat_map = pcolor(time_plot, d_pdf * 1e4, d_pdf_MC ./ max(d_pdf_MC));
hold on;
exp = plot(day_wg_exp, d_exp, '^r', 'MarkerFaceColor', 'r');

set(heat_map, 'EdgeColor', 'none');
% title('Normalized Probability Density of Oxide Thickness with Exposure Time');
xlim([0 time_plot(end)]);
xlabel(strcat('Exposure time [', time_unit, ']'));
ylim([0 max_d_bins * 1e4]);
ylabel('Oxide thickness [\mum]');
bar = colorbar;
colormap(flipud(gray));
ylabel(bar, 'Normalized Probability Density');
legend(exp, 'Experimental Data', 'Location', 'NorthWest');


%% 2D Error Plot
% Note: Can only do one of the error plots at a time! (differences in the
% generated transition data)

fig_NMRSE_2D = figure('Name', 'NRMSE_2D');

list_colors = {'r', 'b', '0 0.6 0', [0.5 0.5 0.5], [1 0.5 0]};

hold on;
yyaxis left;
x_transition = 2.5e-4:0.01e-4:4e-4;
MC_gaussian = normpdf(x_transition, mean_gaussian, std_gaussian);
plot(x_transition * 1e4, MC_gaussian / max(MC_gaussian), '-b', 'DisplayName', 'Gaussian transition');

xlabel('Transition Thickness [\mum]');
ylabel('Normalized probability');
set(gca, 'YColor', 'b');
set(gca, 'GridColor', 'k');

yyaxis right;
for trans_num = 1:num_transitions
    plot(transitions_MC(:, trans_num) * 1e4, d_diff_C4_exp_MC_partial(:, trans_num), 'x', 'Color', list_colors{trans_num}, 'DisplayName', sprintf('Transition %d', trans_num));
end
ylabel('Normalized Root Mean Square Error');
set(gca, 'YColor', 'k');
set(gca, 'GridColor', 'k');

title('Normalized Root Mean Square Error vs Transition Thickness');
legend('-DynamicLegend', 'Location', 'NorthEast');


%% 3D Error Plot
%load(strcat('output_file/', file_name, '_HT_optimization_dicho'));
%%{
fig_NMRSE_3D = figure('Name', 'NRMSE_3D');

[d_diff_C4_exp_MC_plot, index] = sort(d_diff_C4_exp_MC_total);

scatter3(transitions_MC(index(1:n_MC_trans), 1) * 1e4, transitions_MC(index(1:n_MC_trans), 2) * 1e4, d_diff_C4_exp_MC_plot(1:n_MC_trans), 1000, linspace(1,10,n_MC_trans), '.');

xlabel('First Transition [\mum]');
ylabel('Second Transition [\mum]');
zlabel('Normalized Root Mean Square Error');

bar = colorbar;
colormap jet;
colormap(bar, jet);
ylabel(bar, 'Normalized Root Mean Square Error');
%}


%% Movie Comparison
%This plots a comparison of the probability functions generated by the Bin-sampling and pdf-fit methods at each exposure time.   
%{
MovieObj = VideoWriter('Comparison bin sampling - PDF');
MovieObj.FrameRate = 5;
open(MovieObj)
fig_compare_methods = figure();

xlim([0 max_d_bins * 1e4]);
xlabel('Oxide Thickness (microns)');
ylim([0 1]);
ylabel('Probability');

for k = 1:5:N+1

    % Bin sampling method
    plot(d_bins * 1e4, n_curve_per_bin(:, k), '-r');
    hold on;
    
    % PDF method
    plot(d_pdf * 1e4, d_pdf_MC(:, k) / max(d_pdf_MC(:, k)), ':b');
    
    title(sprintf('t = %.0f days', k));
    xlim([0 max_d_bins * 1e4]);
    xlabel('Oxide Thickness (microns)');
    ylim([0 1]);
    ylabel('Probability');
    
    drawnow()
    frame = getframe(fig_compare_methods);
    writeVideo(MovieObj,frame);
    hold off;
    
end
close(MovieObj);
close(fig_compare_methods);
%}